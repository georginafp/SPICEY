[{"path":[]},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://georginafp.github.io/SPICEY/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://georginafp.github.io/SPICEY/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to UMI4Cats","title":"Contributing to UMI4Cats","text":"outlines propose change UMI4Cats. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://georginafp.github.io/SPICEY/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to UMI4Cats","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://georginafp.github.io/SPICEY/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to UMI4Cats","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":"### Pull request process         *   Fork the package and clone onto your computer. If you haven't done this before, we recommend using `usethis::create_from_github(\"\", fork = TRUE)`."},{"path":"https://georginafp.github.io/SPICEY/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to UMI4Cats","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR.","code":"*  We use [roxygen2](https://cran.r-project.org/package=roxygen2), with [Markdown syntax](https://cran.r-project.org/web/packages/roxygen2/vignettes/rd-formatting.html), for documentation.   *  We use [testthat](https://cran.r-project.org/package=testthat) for unit tests.  Contributions with test cases included are easier to accept.   ## Code of Conduct   Please note that the UMI4Cats project is released with a  [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By contributing to this  project you agree to abide by its terms."},{"path":"https://georginafp.github.io/SPICEY/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with SPICEY","title":"Getting help with SPICEY","text":"Thanks using SPICEY! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://georginafp.github.io/SPICEY/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with SPICEY","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://georginafp.github.io/SPICEY/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with SPICEY","text":"Armed reprex, next step figure ask. See also Bioconductor help website. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":"*   If it's a question: start with [community.rstudio.com](https://community.rstudio.com/), and/or StackOverflow. If this a Bioconductor-related question, please ask it at the [Bioconductor Support Website](https://support.bioconductor.org/) using the [appropriate package tag](https://support.bioconductor.org/t/SPICEY) (the website will send an automatic email to the package authors). There are more people there to answer questions. Before opening a new issue, be sure to [search issues and pull requests](https://github.com//issues) to make sure the bug hasn't been reported and/or already fixed in the development version. ## What happens next?                                                                To be as efficient as possible, development of tidyverse packages tends to be very bursty, so you shouldn't worry if you don't get an immediate response.                                                               Typically we don't look at a repo until a sufficient quantity of issues accumulates, then there’s a burst of intense activity as we focus our efforts."},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Measuring tissue specificity from single cell data with SPICEY","text":"SPICEY R package designed infer cell type specificity single-cell ATAC-seq /RNA-seq data. supports multiple linking strategies : Nearest-gene association Co-accessibility-based linking vignette demonstrates use SPICEY preprocessed GRanges input files. input files must prepared advance (provided package).","code":""},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Measuring tissue specificity from single cell data with SPICEY","text":"Install development version GitHub:","code":"# install.packages(\"devtools\") devtools::install_github(\"georginafp/SPICEY\")"},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"input-requirements","dir":"Articles","previous_headings":"","what":"Input Requirements","title":"Measuring tissue specificity from single cell data with SPICEY","text":"package expects two files: ATAC peaks: metadata including annotation, distanceToTSS, optionally nearest gene name. RNA features: DE genes expressed genes annotated gene coordinates metadata (e.g., logFC, p-value). Co-accessibility Links (“coaccessibility” mode): file containing peak--peak links inferred co-accessibility analysis tools like Signac (LinkPeaks()). File must contain following columns: Peaks1, Peaks2, coaccess, CCAN1, CCAN2 Must GInteractions GRangesList object metadata columns (e.g., score). peaks link file match ATAC object. Note: input files included package. must preprocess externally (see ).","code":""},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"preprocessing-overview","dir":"Articles","previous_headings":"","what":"Preprocessing (Overview)","title":"Measuring tissue specificity from single cell data with SPICEY","text":"following code part package, shows required input files generated.","code":""},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"single-cell-atac-seq-data","dir":"Articles","previous_headings":"Preprocessing (Overview)","what":"Single cell ATAC-seq data","title":"Measuring tissue specificity from single cell data with SPICEY","text":"Generated : Reading cell type differential accessible peaks. Annotating distance TSS using ChIPseeker. Classifying peaks promoter distal. Finding nearest gene using regioneR plyranges.","code":"merged_df <- readRDS(\"../data/ATAC_DAR.rds\") |> unlist() retsi_gr <- regioneR::toGRanges(as.data.frame(merged_df))  # Annotate with TSS distance anno <- ChIPseeker::annotatePeak(retsi_gr,   TxDb = TxDb.Hsapiens.UCSC.hg38.knownGene::TxDb.Hsapiens.UCSC.hg38.knownGene,   verbose = FALSE )  retsi_gr$distanceToTSS <- data.frame(anno)$distanceToTSS retsi_gr$annotation <- \"Distal\" retsi_gr$annotation[abs(retsi_gr$distanceToTSS) <= 2000] <- \"Promoter\"  # Add nearest gene name genes <- biomart_genes()$gr retsi_gr$nearestGeneSymbol <- genes$external_gene_name[nearest(retsi_gr, promoters(genes, 1, 0))]  saveRDS(retsi_gr, \"data/FINAL_ATAC.rds\") #> GRanges object with 6 ranges and 7 metadata columns: #>       seqnames              ranges strand | cell_type    p_val_adj        p_val #>          <Rle>           <IRanges>  <Rle> |  <factor>    <numeric>    <numeric> #>   [1]    chr22   27241597-27243500      * |    Acinar 9.52412e-278 2.04193e-283 #>   [2]     chr7 142748901-142749963      * |    Acinar 8.50896e-262 1.82429e-267 #>   [3]    chr10 116553223-116553959      * |    Acinar 1.61617e-251 3.46500e-257 #>   [4]    chr10 116587488-116588562      * |    Acinar 2.17904e-239 4.67177e-245 #>   [5]    chr14   66378630-66379738      * |    Acinar 1.04928e-237 2.24961e-243 #>   [6]    chr17   82909239-82910392      * |    Acinar 7.41158e-234 1.58901e-239 #>       avg_log2FC distanceToTSS  annotation nearestGeneSymbol #>        <numeric>     <numeric> <character>       <character> #>   [1]    6.24965        -16463      Distal               MN1 #>   [2]    6.15114             0    Promoter             PRSS1 #>   [3]    7.92141          7130      Distal             PNLIP #>   [4]    6.81279         -1823    Promoter          PNLIPRP1 #>   [5]    5.77576        -31966      Distal           CCDC196 #>   [6]    6.19518           962    Promoter            ZNF750 #>   ------- #>   seqinfo: 22 sequences from an unspecified genome; no seqlengths"},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"single-cell-rna-seq-data","dir":"Articles","previous_headings":"Preprocessing (Overview)","what":"Single cell RNA-seq data","title":"Measuring tissue specificity from single cell data with SPICEY","text":"Generated : Mapping gene symbols Ensembl IDs. Annotating biotype genomic coordinates using biomaRt similar. Filtering protein-coding genes standard chromosomes. Embeds metadata DE analysis (e.g., logFC, adjusted p-value).","code":"gr_list <- readRDS(\"../data/RNA_DEG.rds\")  gr_df_list <- lapply(gr_list, as.data.frame) gr_list <- lapply(names(gr_df_list), function(name) {   df <- gr_df_list[[name]]   df$symbol <- rownames(df)   df$ensembl_id <- AnnotationDbi::mapIds(org.Hs.eg.db::org.Hs.eg.db,     keys = df$symbol,     column = \"ENSEMBL\",     keytype = \"SYMBOL\",     multiVals = \"first\"   )    df_annot <- dplyr::left_join(     df,     biomart_genes()$df %>% dplyr::select(chromosome_name, start_position, end_position, strand, ensembl_gene_id, gene_biotype),     by = c(\"ensembl_id\" = \"ensembl_gene_id\")   )    if (nrow(df_annot) == 0) return(NULL)    df_annot %>%     dplyr::filter(!is.na(chromosome_name),                   !is.na(start_position),                   !is.na(end_position),                   gene_biotype == \"protein_coding\",                   chromosome_name %in% c(as.character(1:22), \"X\", \"Y\")) %>%     dplyr::mutate(chromosome_name = paste0(\"chr\", chromosome_name)) %>%     makeGRangesFromDataFrame(       seqnames.field = \"chromosome_name\",       start.field = \"start_position\",       end.field = \"end_position\",       strand.field = \"strand\",       keep.extra.columns = TRUE     ) %>%     sort() })  gr_list <- Filter(Negate(is.null), gr_list) names(gr_list) <- names(gr_df_list)  # Merge into a single GRanges retsi_rna <- purrr::imap(gr_list, ~ {   mcols(.x)$cell_type <- .y   .x }) %>%   purrr::reduce(c)  saveRDS(retsi_rna, \"data/FINAL_RNA.rds\") #> GRanges object with 6 ranges and 9 metadata columns: #>       seqnames          ranges strand |       p_val avg_log2FC     pct.1 #>          <Rle>       <IRanges>  <Rle> |   <numeric>  <numeric> <numeric> #>   [1]     chr1     65419-71585      + | 8.60381e-01  4.6307389     0.000 #>   [2]     chr1   923923-944575      + | 6.73442e-14 -0.9545765     0.333 #>   [3]     chr1   960584-965719      + | 8.46084e-03 -0.0880457     0.352 #>   [4]     chr1   966482-975865      + | 2.12779e-01  0.1574298     0.218 #>   [5]     chr1 1001138-1014540      + | 7.88589e-02  0.1096142     0.418 #>   [6]     chr1 1020120-1056119      + | 3.02868e-08 -0.3550321     0.533 #>           pct.2   p_val_adj   cell_type      symbol      ensembl_id #>       <numeric>   <numeric> <character> <character>     <character> #>   [1]     0.000 1.00000e+00      Acinar       OR4F5 ENSG00000186092 #>   [2]     0.631 1.32129e-09      Acinar      SAMD11 ENSG00000187634 #>   [3]     0.459 1.00000e+00      Acinar      KLHL17 ENSG00000187961 #>   [4]     0.271 1.00000e+00      Acinar     PLEKHN1 ENSG00000187583 #>   [5]     0.545 1.00000e+00      Acinar       ISG15 ENSG00000187608 #>   [6]     0.768 5.94227e-04      Acinar        AGRN ENSG00000188157 #>         gene_biotype #>          <character> #>   [1] protein_coding #>   [2] protein_coding #>   [3] protein_coding #>   [4] protein_coding #>   [5] protein_coding #>   [6] protein_coding #>   ------- #>   seqinfo: 24 sequences from an unspecified genome; no seqlengths"},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"example-run-spicey","dir":"Articles","previous_headings":"","what":"Example: Run SPICEY","title":"Measuring tissue specificity from single cell data with SPICEY","text":"demonstrate use SPICEY prepared input files.","code":""},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"nearest-gene-mode","dir":"Articles","previous_headings":"Example: Run SPICEY","what":"Nearest gene mode","title":"Measuring tissue specificity from single cell data with SPICEY","text":"mode links peak nearest gene TSS.","code":"result_nearest <- run_spicey(   atac_path = system.file(\"extdata\", \"FINAL_ATAC.rds\", package = \"SPICEY\"),   rna_path = system.file(\"extdata\", \"FINAL_RNA.rds\", package = \"SPICEY\"),   linking_method = \"nearest\" )"},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"co-accessibility-mode","dir":"Articles","previous_headings":"Example: Run SPICEY","what":"Co-accessibility mode","title":"Measuring tissue specificity from single cell data with SPICEY","text":"mode uses co-accessibility relationships link peaks genes, e.g., tools like Signac::LinkPeaks().","code":"result_coacc <- run_spicey(   atac_path = system.file(\"extdata\", \"FINAL_ATAC.rds\", package = \"SPICEY\"),   rna_path = system.file(\"extdata\", \"FINAL_RNA.rds\", package = \"SPICEY\"),   links_path = system.file(\"extdata\", \"COACC_LINKS.rds\", package = \"SPICEY\"),   linking_method = \"coaccessibility\" )"},{"path":"https://georginafp.github.io/SPICEY/articles/SPICEY.html","id":"output","dir":"Articles","previous_headings":"","what":"Output","title":"Measuring tissue specificity from single cell data with SPICEY","text":"modes return GRanges object :","code":"## ---------------------------------------------------------------------------## # SPICEY using nearest --------------------------------------------------------- ## ---------------------------------------------------------------------------## readRDS(\"../data/SPICEY_nearest.rds\") %>%    as.data.frame() %>%   head() %>%   print() #>   seqnames     start       end width strand cell_type annotation distanceToTSS #> 1    chr22  27241597  27243500  1904      *    Acinar     Distal        -16463 #> 2     chr7 142748901 142749963  1063      *    Acinar   Promoter             0 #> 3    chr10 116553223 116553959   737      *    Acinar     Distal          7130 #> 4    chr10 116587488 116588562  1075      *    Acinar   Promoter         -1823 #> 5    chr14  66378630  66379738  1109      *    Acinar     Distal        -31966 #> 6    chr17  82909239  82910392  1154      *    Acinar   Promoter           962 #>   nearestGeneSymbol                    region    RETSI RETSI_entropy      GETSI #> 1               MN1   chr22:27241597-27243500 3.362162  0.0082795495 0.00000000 #> 2             PRSS1  chr7:142748901-142749963 3.305732  0.0157299376 2.79794028 #> 3             PNLIP chr10:116553223-116553959 3.267559  0.0004263284 2.84538303 #> 4          PNLIPRP1 chr10:116587488-116588562 3.220621  0.0017568919 2.54593232 #> 5           CCDC196   chr14:66378630-66379738 3.213932  0.1060987533         NA #> 6            ZNF750   chr17:82909239-82910392 3.198468  0.0114339583 0.01348086 #>   GETSI_entropy #> 1    0.37851735 #> 2    0.04157385 #> 3    0.02196533 #> 4    0.02450432 #> 5            NA #> 6    0.43761550   ## ---------------------------------------------------------------------------## # SPICEY using co-accessibility ------------------------------------------------ ## ---------------------------------------------------------------------------## readRDS(\"../data/SPICEY_coaccessible.rds\") %>%    as.data.frame() %>%   head() %>%   print() #>   seqnames    start      end width strand cell_type annotation distanceToTSS #> 1    chr22 27241597 27243500  1904      *    Acinar     Distal        -16463 #> 2    chr22 27241597 27243500  1904      *    Acinar     Distal        -16463 #> 3    chr22 27241597 27243500  1904      *    Acinar     Distal        -16463 #> 4    chr22 27241597 27243500  1904      *    Acinar     Distal        -16463 #> 5    chr22 27241597 27243500  1904      *    Acinar     Distal        -16463 #> 6    chr22 27241597 27243500  1904      *    Acinar     Distal        -16463 #>   nearestGeneSymbol genes_coacc                  region    RETSI RETSI_entropy #> 1               MN1        GRK3 chr22:27241597-27243500 3.362162    0.00827955 #> 2               MN1      MYO18B chr22:27241597-27243500 3.362162    0.00827955 #> 3               MN1       SEZ6L chr22:27241597-27243500 3.362162    0.00827955 #> 4               MN1      ASPHD2 chr22:27241597-27243500 3.362162    0.00827955 #> 5               MN1        HPS4 chr22:27241597-27243500 3.362162    0.00827955 #> 6               MN1        SRRD chr22:27241597-27243500 3.362162    0.00827955 #>        GETSI GETSI_entropy #> 1 0.70350739     0.8133780 #> 2 0.50443406     0.6735259 #> 3 0.52743075     0.8017803 #> 4 0.05734870     0.8576141 #> 5 0.21182449     0.8787387 #> 6 0.01494051     0.8670795"},{"path":[]},{"path":[]},{"path":"https://georginafp.github.io/SPICEY/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Georgina Fuentes-Páez. Author, maintainer. Mireia Ramos-Rodriguez. Author. Lorenzo Pasquali. Author.","code":""},{"path":"https://georginafp.github.io/SPICEY/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"author1, author2, author3 (publicationYear) articleTitle, *journalName*; volumeNumber, [linkToPublication](linkToPublication)","code":"@Article{,   entry = {Article},   title = {articleTitle},   author = {{author1} and {author2} and {author3}},   journal = {journalName},   year = {publicationYear},   volume = {volume},   number = {number},   pages = {pages},   url = {linkToPublication}, }"},{"path":[]},{"path":"https://georginafp.github.io/SPICEY/index.html","id":"bioconductor-release-status","dir":"","previous_headings":"","what":"Bioconductor release status","title":"Calculates cell type specificity from single cell data","text":"goal SPICEY provide user-friendly pipeline quantifying visualizing tissue specificity specificity","code":""},{"path":"https://georginafp.github.io/SPICEY/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculates cell type specificity from single cell data","text":"can install latest release SPICEY github repository: Now can load package using library(SPICEY).","code":"devtools::install_github(\"georginafp/SPICEY\")"},{"path":"https://georginafp.github.io/SPICEY/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Calculates cell type specificity from single cell data","text":"detailed instructions use SPICEY, please see vignette.","code":"library(SPICEY) ## Nearest gene mode result_nearest <- run_spicey(   atac_path = system.file(\"extdata\", \"FINAL_ATAC.rds\", package = \"SPICEY\"),   rna_path = system.file(\"extdata\", \"FINAL_RNA.rds\", package = \"SPICEY\"),   linking_method = \"nearest\" )  ## Co-accessibility mode result_coacc <- run_spicey(   atac_path = system.file(\"extdata\", \"FINAL_ATAC.rds\", package = \"SPICEY\"),   rna_path = system.file(\"extdata\", \"FINAL_RNA.rds\", package = \"SPICEY\"),   links_path = system.file(\"extdata\", \"COACC_LINKS.rds\", package = \"SPICEY\"),   linking_method = \"coaccessibility\" )"},{"path":"https://georginafp.github.io/SPICEY/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Calculates cell type specificity from single cell data","text":"Please note SPICEY project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/annotate_with_nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate RETSI peaks with nearest gene GETSI scores — annotate_with_nearest","title":"Annotate RETSI peaks with nearest gene GETSI scores — annotate_with_nearest","text":"Annotate RETSI peaks nearest gene GETSI scores","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/annotate_with_nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate RETSI peaks with nearest gene GETSI scores — annotate_with_nearest","text":"","code":"annotate_with_nearest(retsi, getsi)"},{"path":"https://georginafp.github.io/SPICEY/reference/annotate_with_nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate RETSI peaks with nearest gene GETSI scores — annotate_with_nearest","text":"retsi GRanges RETSI scores cell_type getsi GRanges GETSI scores, symbol, cell_type, optionally entropy","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/annotate_with_nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate RETSI peaks with nearest gene GETSI scores — annotate_with_nearest","text":"GRanges RETSI corresponding GETSI scores nearest genes","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/biomart_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve gene annotations from Ensembl via biomaRt — biomart_genes","title":"Retrieve gene annotations from Ensembl via biomaRt — biomart_genes","text":"Downloads gene annotation data Ensembl using biomaRt, processes , returns list data.frame filtered GRanges object containing protein-coding genes. useful RNA-seq epigenomic pipelines.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/biomart_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve gene annotations from Ensembl via biomaRt — biomart_genes","text":"","code":"biomart_genes()"},{"path":"https://georginafp.github.io/SPICEY/reference/biomart_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve gene annotations from Ensembl via biomaRt — biomart_genes","text":"list two elements: df data.frame gene annotation information RNA-seq analysis. gr GRanges object protein-coding genes epigenomic analyses.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_getsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute normalized entropy of GETSI scores — compute_entropy_getsi","title":"Compute normalized entropy of GETSI scores — compute_entropy_getsi","text":"Compute normalized entropy GETSI scores","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_getsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute normalized entropy of GETSI scores — compute_entropy_getsi","text":"","code":"compute_entropy_getsi(gr)"},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_getsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute normalized entropy of GETSI scores — compute_entropy_getsi","text":"gr GRanges GETSI scores symbol column","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_getsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute normalized entropy of GETSI scores — compute_entropy_getsi","text":"Data frame symbol norm_entropy columns","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_retsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute normalized entropy of RETSI scores — compute_entropy_retsi","title":"Compute normalized entropy of RETSI scores — compute_entropy_retsi","text":"Compute normalized entropy RETSI scores","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_retsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute normalized entropy of RETSI scores — compute_entropy_retsi","text":"","code":"compute_entropy_retsi(gr)"},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_retsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute normalized entropy of RETSI scores — compute_entropy_retsi","text":"gr GRanges RETSI scores region column","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_entropy_retsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute normalized entropy of RETSI scores — compute_entropy_retsi","text":"Data frame region norm_entropy columns","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_getsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute GETSI scores on RNA data — compute_getsi","title":"Compute GETSI scores on RNA data — compute_getsi","text":"Compute GETSI scores RNA data","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_getsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute GETSI scores on RNA data — compute_getsi","text":"","code":"compute_getsi(gr)"},{"path":"https://georginafp.github.io/SPICEY/reference/compute_getsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute GETSI scores on RNA data — compute_getsi","text":"gr GRanges object RNA differential expression data (avg_log2FC, p_val, cell_type, symbol)","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_getsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute GETSI scores on RNA data — compute_getsi","text":"GRanges computed GETSI scores (GETSI column)","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_retsi.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute RETSI scores on ATAC peaks — compute_retsi","title":"Compute RETSI scores on ATAC peaks — compute_retsi","text":"Compute RETSI scores ATAC peaks","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_retsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute RETSI scores on ATAC peaks — compute_retsi","text":"","code":"compute_retsi(gr)"},{"path":"https://georginafp.github.io/SPICEY/reference/compute_retsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute RETSI scores on ATAC peaks — compute_retsi","text":"gr GRanges object differential accessibility info (avg_log2FC, p_val, cell_type columns)","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/compute_retsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute RETSI scores on ATAC peaks — compute_retsi","text":"GRanges computed RETSI scores (RETSI column)","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/read_input_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read input data from a file path — read_input_file","title":"Read input data from a file path — read_input_file","text":"Reads data specified file path. Supports RDS, CSV, TSV, TXT formats. Returns data.frame GRanges object RDS contains GRanges.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/read_input_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read input data from a file path — read_input_file","text":"","code":"read_input_file(path)"},{"path":"https://georginafp.github.io/SPICEY/reference/read_input_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read input data from a file path — read_input_file","text":"path Character string file path read.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/read_input_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read input data from a file path — read_input_file","text":"contents file, either data.frame, GRanges, R object saved RDS.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/run_spicey.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the SPICEY pipeline — run_spicey","title":"Run the SPICEY pipeline — run_spicey","text":"function runs SPICEY pipeline scoring linking regulatory elements (REs) genes based single-cell ATAC-seq RNA-seq data. supports two linking strategies: co-accessibility-based nearest-gene annotation.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/run_spicey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the SPICEY pipeline — run_spicey","text":"","code":"run_spicey(   atac_path,   rna_path,   links_path = NULL,   linking_method = c(\"coaccessibility\", \"nearest\") )"},{"path":"https://georginafp.github.io/SPICEY/reference/run_spicey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the SPICEY pipeline — run_spicey","text":"atac_path Path RDS file containing ATAC-seq data GRanges data.frame convertible GRanges. rna_path Path RDS file containing RNA-seq data GRanges data.frame convertible GRanges. links_path Optional path RDS file containing co-accessibility links data.frame. Required linking_method = \"coaccessibility\". linking_method Linking method use; either \"coaccessibility\" \"nearest\".","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/run_spicey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the SPICEY pipeline — run_spicey","text":"data.frame containing annotated REs RETSI/GETSI scores, entropy, linked gene information. returned table include RETSI scores entropy region, GETSI scores entropy linked genes according chosen linking strategy.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/run_spicey.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the SPICEY pipeline — run_spicey","text":"RETSI: Regulatory Element Tissue Specificity Index. GETSI: Gene Expression Tissue Specificity Index. using \"coaccessibility\" mode, function reads precomputed link file performs RETSI/GETSI scoring, linking, merging. using \"nearest\" mode, function links RE nearest gene merges GETSI scores accordingly.","code":""},{"path":"https://georginafp.github.io/SPICEY/reference/run_spicey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the SPICEY pipeline — run_spicey","text":"","code":"if (FALSE) { # \\dontrun{ # Co-accessibility-based linking run_spicey(   atac_path = \"data/FINAL_ATAC.rds\",   rna_path = \"data/FINAL_RNA.rds\",   links_path = \"data/COACC_LINKS.rds\",   linking_method = \"coaccessibility\" )  # Nearest-gene-based linking run_spicey(   atac_path = \"data/FINAL_ATAC.rds\",   rna_path = \"data/FINAL_RNA.rds\",   linking_method = \"nearest\" ) } # }"},{"path":"https://georginafp.github.io/SPICEY/news/index.html","id":"changes-in-version-0990","dir":"Changelog","previous_headings":"","what":"CHANGES IN VERSION 0.99.0","title":"CHANGES IN VERSION 0.99.0","text":"o First public release SPICEY. o Added NEWS.md file track changes package.","code":""}]
